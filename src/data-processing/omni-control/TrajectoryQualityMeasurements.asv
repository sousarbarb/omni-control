function [Error] = TrajectoryQualityMeasurements(Time, Xpos, Xpos_r, range)
%TRAJECTORYQUALITYMEASUREMENTS

  if isempty(range)
    
    % Quality measures
    n = length(Time);
    % - Average absolute error
    Error.avg_abs_x  = mean( abs( Xpos_r(:,1) - Xpos(:,1) ) );
    Error.avg_abs_y  = mean( abs( Xpos_r(:,2) - Xpos(:,2) ) );
    Error.avg_abs_th = rad2deg( mean( abs( wrapToPi( Xpos_r(:,3) - Xpos(:,3) ) ) ) );
    Error.avg_abs_dist = mean( sqrt( (Xpos_r(:,1) - Xpos(:,1)).^2 + (Xpos_r(:,2) - Xpos(:,2)).^2 ) );
    % - Maximum absolute error
    Error.max_abs_x  = max( abs( Xpos_r(:,1) - Xpos(:,1) ) );
    Error.max_abs_y  = max( abs( Xpos_r(:,2) - Xpos(:,2) ) );
    Error.max_abs_th = rad2deg( max( abs( wrapToPi( Xpos_r(:,3) - Xpos(:,3) ) ) ) );
    Error.max_abs_dist = max( sqrt( (Xpos_r(:,1) - Xpos(:,1)).^2 + (Xpos_r(:,2) - Xpos(:,2)).^2 ) );
    % - Trajectory error
    Error.trajectory = zeros(n,1);
    for i=1:n
      Error.trajectory(i) = min( sqrt( (Xpos_r(:,1) - Xpos(i,1)).^2 + (Xpos_r(:,2) - Xpos(i,2)).^2 ) );
    end
    Error.avg_trajectory = mean(Error.trajectory);
    Error.avg_trajectory = mean(Error.trajectory);
    
  else
    
    % Quality measures
    n = range(2) - range(1) + 1;
    
  end
end